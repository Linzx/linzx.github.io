
1. 指针

int *point = &address; //指针
int &alias = k; //引用

void* ptr = nullptr //空指针

2. 头文件写法

防止重复包含

#ifndef _TYPE_A
#define _TYPE_A
#endif

3. namespace

namespace gityuan{
  void methodA();
}

使用：

gityuan::methodA();

4. 构造函数

普通构造函数
拷贝构造函数 （深拷贝、浅拷贝）
拷贝赋值函数

5. 虚函数
虚函数
纯虚函数


6. 几个重要的东西
http://blog.csdn.net/fengbingchun/article/details/51235498

static_cast语法：static_cast<type-id>(expression)

- const_cast: 用来去除变量的const限定
- reinterpret_cast: 在任意指针之间进行互相转换
- static_cast: 指向基类的指针和指向子类的指针之间的互相转换

static_cast和reinterpret_cast一样，在面对const的时候都无能为力：两者都不能去除const限定


## 7. 基础

(2)数据转换函数
atof(将字符串转换成浮点型数)1
atoi(将字符串转换成整型数)
atol(将字符串转换成长整型数)
ecvt(将浮点型数转换成字符串,19取四舍五入)
fcvt(将浮点型数转换为字符串,20取四舍五入)
gcvt(将浮点型数转换为字符串,21取四舍五入)

(3)内存配置函数
alloca(配置内存空间)
brk(改变数据字节的范围)
calloc(配置内存空间)
free(释放原先配置的内存)
getpagesize(取得内存分页大小)
malloc(配置内存空间)
mmap(建立内存映射)
munmap(解除内存映射)
realloc(更改己配置的内存空间)
sbrk(增加程序可用的数据空间)


(4)时间函数
clock(取得进程占用CPU的大约时间)
ctime(将时间和日期以字符串格式表示)
difftime(计算时间差距)
gettimeofday(取得目前的时间)
mktime(将时间结构数据转换成经过的秒数)


(5)字符串处理函数
memccpy(拷贝内存内容)
memchr(在某一内存范围中查找一特定字符)
memcmp(比较内存内容)
memcpy(拷贝内存内容)
memfrob(对内存区域编码)
memmove(拷贝内存内容)
memset(将一段内存空间填入某值)

(11)初级I／O函数
close(关闭文件)
creat(建立文件)
dup(复制文件描述词)
dup2(复制文件描述词)
fcntl(文件描述词操作)
flock(锁定文件或解除锁定)
fsync(将缓冲区数据写回磁盘)
lseek(移动文件的读写位置)
open(打开文件)
read(由己打开的文件读取数据)
sync(将缓冲区数据写回磁盘)
write(将数据写入已打开的文件内)


不是数据嵌入链表, 而是链表嵌入到数据.
